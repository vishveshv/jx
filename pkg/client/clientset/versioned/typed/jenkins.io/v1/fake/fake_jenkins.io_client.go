// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/jenkins-x/jx/pkg/client/clientset/versioned/typed/jenkins.io/v1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeJenkinsV1 struct {
	*testing.Fake
}

func (c *FakeJenkinsV1) Apps(namespace string) v1.AppInterface {
	return &FakeApps{c, namespace}
}

func (c *FakeJenkinsV1) BuildPacks(namespace string) v1.BuildPackInterface {
	return &FakeBuildPacks{c, namespace}
}

func (c *FakeJenkinsV1) CommitStatuses(namespace string) v1.CommitStatusInterface {
	return &FakeCommitStatuses{c, namespace}
}

func (c *FakeJenkinsV1) Environments(namespace string) v1.EnvironmentInterface {
	return &FakeEnvironments{c, namespace}
}

func (c *FakeJenkinsV1) EnvironmentRoleBindings(namespace string) v1.EnvironmentRoleBindingInterface {
	return &FakeEnvironmentRoleBindings{c, namespace}
}

func (c *FakeJenkinsV1) Extensions(namespace string) v1.ExtensionInterface {
	return &FakeExtensions{c, namespace}
}

func (c *FakeJenkinsV1) Facts(namespace string) v1.FactInterface {
	return &FakeFacts{c, namespace}
}

func (c *FakeJenkinsV1) GitServices(namespace string) v1.GitServiceInterface {
	return &FakeGitServices{c, namespace}
}

func (c *FakeJenkinsV1) PipelineActivities(namespace string) v1.PipelineActivityInterface {
	return &FakePipelineActivities{c, namespace}
}

func (c *FakeJenkinsV1) PipelineStructures(namespace string) v1.PipelineStructureInterface {
	return &FakePipelineStructures{c, namespace}
}

func (c *FakeJenkinsV1) Plugins(namespace string) v1.PluginInterface {
	return &FakePlugins{c, namespace}
}

func (c *FakeJenkinsV1) Releases(namespace string) v1.ReleaseInterface {
	return &FakeReleases{c, namespace}
}

func (c *FakeJenkinsV1) Schedulers(namespace string) v1.SchedulerInterface {
	return &FakeSchedulers{c, namespace}
}

func (c *FakeJenkinsV1) SourceRepositories(namespace string) v1.SourceRepositoryInterface {
	return &FakeSourceRepositories{c, namespace}
}

func (c *FakeJenkinsV1) SourceRepositoryGroups(namespace string) v1.SourceRepositoryGroupInterface {
	return &FakeSourceRepositoryGroups{c, namespace}
}

func (c *FakeJenkinsV1) Teams(namespace string) v1.TeamInterface {
	return &FakeTeams{c, namespace}
}

func (c *FakeJenkinsV1) Users(namespace string) v1.UserInterface {
	return &FakeUsers{c, namespace}
}

func (c *FakeJenkinsV1) Workflows(namespace string) v1.WorkflowInterface {
	return &FakeWorkflows{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeJenkinsV1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
