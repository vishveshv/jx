// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	time "time"

	batch_v1 "k8s.io/api/batch/v1"
	core_v1 "k8s.io/api/core/v1"
	rbac_v1 "k8s.io/api/rbac/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountReference) DeepCopyInto(out *AccountReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountReference.
func (in *AccountReference) DeepCopy() *AccountReference {
	if in == nil {
		return nil
	}
	out := new(AccountReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *App) DeepCopyInto(out *App) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new App.
func (in *App) DeepCopy() *App {
	if in == nil {
		return nil
	}
	out := new(App)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *App) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppList) DeepCopyInto(out *AppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]App, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppList.
func (in *AppList) DeepCopy() *AppList {
	if in == nil {
		return nil
	}
	out := new(AppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec) DeepCopyInto(out *AppSpec) {
	*out = *in
	if in.SchemaPreprocessor != nil {
		in, out := &in.SchemaPreprocessor, &out.SchemaPreprocessor
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.Container)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.SchemaPreprocessorRole != nil {
		in, out := &in.SchemaPreprocessorRole, &out.SchemaPreprocessorRole
		if *in == nil {
			*out = nil
		} else {
			*out = new(rbac_v1.Role)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.PipelineExtension != nil {
		in, out := &in.PipelineExtension, &out.PipelineExtension
		if *in == nil {
			*out = nil
		} else {
			*out = new(PipelineExtension)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec.
func (in *AppSpec) DeepCopy() *AppSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Approve) DeepCopyInto(out *Approve) {
	*out = *in
	if in.IssueRequired != nil {
		in, out := &in.IssueRequired, &out.IssueRequired
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.RequireSelfApproval != nil {
		in, out := &in.RequireSelfApproval, &out.RequireSelfApproval
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.LgtmActsAsApprove != nil {
		in, out := &in.LgtmActsAsApprove, &out.LgtmActsAsApprove
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.IgnoreReviewState != nil {
		in, out := &in.IgnoreReviewState, &out.IgnoreReviewState
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Approve.
func (in *Approve) DeepCopy() *Approve {
	if in == nil {
		return nil
	}
	out := new(Approve)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attachment) DeepCopyInto(out *Attachment) {
	*out = *in
	if in.URLs != nil {
		in, out := &in.URLs, &out.URLs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attachment.
func (in *Attachment) DeepCopy() *Attachment {
	if in == nil {
		return nil
	}
	out := new(Attachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchPipelineActivity) DeepCopyInto(out *BatchPipelineActivity) {
	*out = *in
	if in.ComprisingPulLRequests != nil {
		in, out := &in.ComprisingPulLRequests, &out.ComprisingPulLRequests
		*out = make([]PullRequestInfo, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchPipelineActivity.
func (in *BatchPipelineActivity) DeepCopy() *BatchPipelineActivity {
	if in == nil {
		return nil
	}
	out := new(BatchPipelineActivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Binary) DeepCopyInto(out *Binary) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Binary.
func (in *Binary) DeepCopy() *Binary {
	if in == nil {
		return nil
	}
	out := new(Binary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionContextPolicy) DeepCopyInto(out *BranchProtectionContextPolicy) {
	*out = *in
	if in.Contexts != nil {
		in, out := &in.Contexts, &out.Contexts
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionContextPolicy.
func (in *BranchProtectionContextPolicy) DeepCopy() *BranchProtectionContextPolicy {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionContextPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Brancher) DeepCopyInto(out *Brancher) {
	*out = *in
	if in.SkipBranches != nil {
		in, out := &in.SkipBranches, &out.SkipBranches
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Branches != nil {
		in, out := &in.Branches, &out.Branches
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Brancher.
func (in *Brancher) DeepCopy() *Brancher {
	if in == nil {
		return nil
	}
	out := new(Brancher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildPack) DeepCopyInto(out *BuildPack) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildPack.
func (in *BuildPack) DeepCopy() *BuildPack {
	if in == nil {
		return nil
	}
	out := new(BuildPack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildPack) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildPackList) DeepCopyInto(out *BuildPackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BuildPack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildPackList.
func (in *BuildPackList) DeepCopy() *BuildPackList {
	if in == nil {
		return nil
	}
	out := new(BuildPackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildPackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildPackSpec) DeepCopyInto(out *BuildPackSpec) {
	*out = *in
	if in.QuickstartLocations != nil {
		in, out := &in.QuickstartLocations, &out.QuickstartLocations
		*out = make([]QuickStartLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildPackSpec.
func (in *BuildPackSpec) DeepCopy() *BuildPackSpec {
	if in == nil {
		return nil
	}
	out := new(BuildPackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartRef) DeepCopyInto(out *ChartRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartRef.
func (in *ChartRef) DeepCopy() *ChartRef {
	if in == nil {
		return nil
	}
	out := new(ChartRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitStatus) DeepCopyInto(out *CommitStatus) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitStatus.
func (in *CommitStatus) DeepCopy() *CommitStatus {
	if in == nil {
		return nil
	}
	out := new(CommitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CommitStatus) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitStatusCommitReference) DeepCopyInto(out *CommitStatusCommitReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitStatusCommitReference.
func (in *CommitStatusCommitReference) DeepCopy() *CommitStatusCommitReference {
	if in == nil {
		return nil
	}
	out := new(CommitStatusCommitReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitStatusDetails) DeepCopyInto(out *CommitStatusDetails) {
	*out = *in
	out.PipelineActivity = in.PipelineActivity
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CommitStatusItem, len(*in))
		copy(*out, *in)
	}
	out.Commit = in.Commit
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitStatusDetails.
func (in *CommitStatusDetails) DeepCopy() *CommitStatusDetails {
	if in == nil {
		return nil
	}
	out := new(CommitStatusDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitStatusItem) DeepCopyInto(out *CommitStatusItem) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitStatusItem.
func (in *CommitStatusItem) DeepCopy() *CommitStatusItem {
	if in == nil {
		return nil
	}
	out := new(CommitStatusItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitStatusList) DeepCopyInto(out *CommitStatusList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CommitStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitStatusList.
func (in *CommitStatusList) DeepCopy() *CommitStatusList {
	if in == nil {
		return nil
	}
	out := new(CommitStatusList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CommitStatusList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitStatusSpec) DeepCopyInto(out *CommitStatusSpec) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CommitStatusDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitStatusSpec.
func (in *CommitStatusSpec) DeepCopy() *CommitStatusSpec {
	if in == nil {
		return nil
	}
	out := new(CommitStatusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitSummary) DeepCopyInto(out *CommitSummary) {
	*out = *in
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		if *in == nil {
			*out = nil
		} else {
			*out = new(UserDetails)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Committer != nil {
		in, out := &in.Committer, &out.Committer
		if *in == nil {
			*out = nil
		} else {
			*out = new(UserDetails)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.IssueIDs != nil {
		in, out := &in.IssueIDs, &out.IssueIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitSummary.
func (in *CommitSummary) DeepCopy() *CommitSummary {
	if in == nil {
		return nil
	}
	out := new(CommitSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapSpec) DeepCopyInto(out *ConfigMapSpec) {
	*out = *in
	if in.AdditionalNamespaces != nil {
		in, out := &in.AdditionalNamespaces, &out.AdditionalNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapSpec.
func (in *ConfigMapSpec) DeepCopy() *ConfigMapSpec {
	if in == nil {
		return nil
	}
	out := new(ConfigMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigUpdater) DeepCopyInto(out *ConfigUpdater) {
	*out = *in
	if in.Map != nil {
		in, out := &in.Map, &out.Map
		*out = make(map[string]ConfigMapSpec, len(*in))
		for key, val := range *in {
			newVal := new(ConfigMapSpec)
			val.DeepCopyInto(newVal)
			(*out)[key] = *newVal
		}
	}
	in.ConfigMap.DeepCopyInto(&out.ConfigMap)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigUpdater.
func (in *ConfigUpdater) DeepCopy() *ConfigUpdater {
	if in == nil {
		return nil
	}
	out := new(ConfigUpdater)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContextPolicy) DeepCopyInto(out *ContextPolicy) {
	*out = *in
	if in.SkipUnknownContexts != nil {
		in, out := &in.SkipUnknownContexts, &out.SkipUnknownContexts
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.RequiredContexts != nil {
		in, out := &in.RequiredContexts, &out.RequiredContexts
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.RequiredIfPresentContexts != nil {
		in, out := &in.RequiredIfPresentContexts, &out.RequiredIfPresentContexts
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.OptionalContexts != nil {
		in, out := &in.OptionalContexts, &out.OptionalContexts
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.FromBranchProtection != nil {
		in, out := &in.FromBranchProtection, &out.FromBranchProtection
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContextPolicy.
func (in *ContextPolicy) DeepCopy() *ContextPolicy {
	if in == nil {
		return nil
	}
	out := new(ContextPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreActivityStep) DeepCopyInto(out *CoreActivityStep) {
	*out = *in
	if in.StartedTimestamp != nil {
		in, out := &in.StartedTimestamp, &out.StartedTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.CompletedTimestamp != nil {
		in, out := &in.CompletedTimestamp, &out.CompletedTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreActivityStep.
func (in *CoreActivityStep) DeepCopy() *CoreActivityStep {
	if in == nil {
		return nil
	}
	out := new(CoreActivityStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependencyUpdate) DeepCopyInto(out *DependencyUpdate) {
	*out = *in
	out.DependencyUpdateDetails = in.DependencyUpdateDetails
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]DependencyUpdatePath, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(DependencyUpdatePath, len(*in))
				copy(*out, *in)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependencyUpdate.
func (in *DependencyUpdate) DeepCopy() *DependencyUpdate {
	if in == nil {
		return nil
	}
	out := new(DependencyUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependencyUpdateDetails) DeepCopyInto(out *DependencyUpdateDetails) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependencyUpdateDetails.
func (in *DependencyUpdateDetails) DeepCopy() *DependencyUpdateDetails {
	if in == nil {
		return nil
	}
	out := new(DependencyUpdateDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in DependencyUpdatePath) DeepCopyInto(out *DependencyUpdatePath) {
	{
		in := &in
		*out = make(DependencyUpdatePath, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependencyUpdatePath.
func (in DependencyUpdatePath) DeepCopy() DependencyUpdatePath {
	if in == nil {
		return nil
	}
	out := new(DependencyUpdatePath)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Environment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentFilter) DeepCopyInto(out *EnvironmentFilter) {
	*out = *in
	if in.Includes != nil {
		in, out := &in.Includes, &out.Includes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentFilter.
func (in *EnvironmentFilter) DeepCopy() *EnvironmentFilter {
	if in == nil {
		return nil
	}
	out := new(EnvironmentFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentList) DeepCopyInto(out *EnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentList.
func (in *EnvironmentList) DeepCopy() *EnvironmentList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentRepository) DeepCopyInto(out *EnvironmentRepository) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentRepository.
func (in *EnvironmentRepository) DeepCopy() *EnvironmentRepository {
	if in == nil {
		return nil
	}
	out := new(EnvironmentRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentRoleBinding) DeepCopyInto(out *EnvironmentRoleBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentRoleBinding.
func (in *EnvironmentRoleBinding) DeepCopy() *EnvironmentRoleBinding {
	if in == nil {
		return nil
	}
	out := new(EnvironmentRoleBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentRoleBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentRoleBindingList) DeepCopyInto(out *EnvironmentRoleBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentRoleBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentRoleBindingList.
func (in *EnvironmentRoleBindingList) DeepCopy() *EnvironmentRoleBindingList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentRoleBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentRoleBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentRoleBindingSpec) DeepCopyInto(out *EnvironmentRoleBindingSpec) {
	*out = *in
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]rbac_v1.Subject, len(*in))
		copy(*out, *in)
	}
	out.RoleRef = in.RoleRef
	if in.Environments != nil {
		in, out := &in.Environments, &out.Environments
		*out = make([]EnvironmentFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentRoleBindingSpec.
func (in *EnvironmentRoleBindingSpec) DeepCopy() *EnvironmentRoleBindingSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentRoleBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentRoleBindingStatus) DeepCopyInto(out *EnvironmentRoleBindingStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentRoleBindingStatus.
func (in *EnvironmentRoleBindingStatus) DeepCopy() *EnvironmentRoleBindingStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentRoleBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSpec) DeepCopyInto(out *EnvironmentSpec) {
	*out = *in
	out.Source = in.Source
	in.TeamSettings.DeepCopyInto(&out.TeamSettings)
	out.PreviewGitSpec = in.PreviewGitSpec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSpec.
func (in *EnvironmentSpec) DeepCopy() *EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentStatus) DeepCopyInto(out *EnvironmentStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentStatus.
func (in *EnvironmentStatus) DeepCopy() *EnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariable) DeepCopyInto(out *EnvironmentVariable) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariable.
func (in *EnvironmentVariable) DeepCopy() *EnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Extension) DeepCopyInto(out *Extension) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Extension.
func (in *Extension) DeepCopy() *Extension {
	if in == nil {
		return nil
	}
	out := new(Extension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Extension) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionConfig) DeepCopyInto(out *ExtensionConfig) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ExtensionParameterValue, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionConfig.
func (in *ExtensionConfig) DeepCopy() *ExtensionConfig {
	if in == nil {
		return nil
	}
	out := new(ExtensionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionConfigList) DeepCopyInto(out *ExtensionConfigList) {
	*out = *in
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = make([]ExtensionConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionConfigList.
func (in *ExtensionConfigList) DeepCopy() *ExtensionConfigList {
	if in == nil {
		return nil
	}
	out := new(ExtensionConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionDefinition) DeepCopyInto(out *ExtensionDefinition) {
	*out = *in
	if in.When != nil {
		in, out := &in.When, &out.When
		*out = make([]ExtensionWhen, len(*in))
		copy(*out, *in)
	}
	if in.Children != nil {
		in, out := &in.Children, &out.Children
		*out = make([]ExtensionDefinitionChildReference, len(*in))
		copy(*out, *in)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ExtensionParameter, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionDefinition.
func (in *ExtensionDefinition) DeepCopy() *ExtensionDefinition {
	if in == nil {
		return nil
	}
	out := new(ExtensionDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionDefinitionChildReference) DeepCopyInto(out *ExtensionDefinitionChildReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionDefinitionChildReference.
func (in *ExtensionDefinitionChildReference) DeepCopy() *ExtensionDefinitionChildReference {
	if in == nil {
		return nil
	}
	out := new(ExtensionDefinitionChildReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionDefinitionList) DeepCopyInto(out *ExtensionDefinitionList) {
	*out = *in
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = make([]ExtensionDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionDefinitionList.
func (in *ExtensionDefinitionList) DeepCopy() *ExtensionDefinitionList {
	if in == nil {
		return nil
	}
	out := new(ExtensionDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionDefinitionReference) DeepCopyInto(out *ExtensionDefinitionReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionDefinitionReference.
func (in *ExtensionDefinitionReference) DeepCopy() *ExtensionDefinitionReference {
	if in == nil {
		return nil
	}
	out := new(ExtensionDefinitionReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionDefinitionReferenceList) DeepCopyInto(out *ExtensionDefinitionReferenceList) {
	*out = *in
	if in.Remotes != nil {
		in, out := &in.Remotes, &out.Remotes
		*out = make([]ExtensionDefinitionReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionDefinitionReferenceList.
func (in *ExtensionDefinitionReferenceList) DeepCopy() *ExtensionDefinitionReferenceList {
	if in == nil {
		return nil
	}
	out := new(ExtensionDefinitionReferenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionExecution) DeepCopyInto(out *ExtensionExecution) {
	*out = *in
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make([]EnvironmentVariable, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionExecution.
func (in *ExtensionExecution) DeepCopy() *ExtensionExecution {
	if in == nil {
		return nil
	}
	out := new(ExtensionExecution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionList) DeepCopyInto(out *ExtensionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Extension, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionList.
func (in *ExtensionList) DeepCopy() *ExtensionList {
	if in == nil {
		return nil
	}
	out := new(ExtensionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExtensionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionParameter) DeepCopyInto(out *ExtensionParameter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionParameter.
func (in *ExtensionParameter) DeepCopy() *ExtensionParameter {
	if in == nil {
		return nil
	}
	out := new(ExtensionParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionParameterValue) DeepCopyInto(out *ExtensionParameterValue) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionParameterValue.
func (in *ExtensionParameterValue) DeepCopy() *ExtensionParameterValue {
	if in == nil {
		return nil
	}
	out := new(ExtensionParameterValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionRepositoryLockList) DeepCopyInto(out *ExtensionRepositoryLockList) {
	*out = *in
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = make([]ExtensionSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionRepositoryLockList.
func (in *ExtensionRepositoryLockList) DeepCopy() *ExtensionRepositoryLockList {
	if in == nil {
		return nil
	}
	out := new(ExtensionRepositoryLockList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionRepositoryReference) DeepCopyInto(out *ExtensionRepositoryReference) {
	*out = *in
	out.Chart = in.Chart
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionRepositoryReference.
func (in *ExtensionRepositoryReference) DeepCopy() *ExtensionRepositoryReference {
	if in == nil {
		return nil
	}
	out := new(ExtensionRepositoryReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionRepositoryReferenceList) DeepCopyInto(out *ExtensionRepositoryReferenceList) {
	*out = *in
	if in.Repositories != nil {
		in, out := &in.Repositories, &out.Repositories
		*out = make([]ExtensionRepositoryReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionRepositoryReferenceList.
func (in *ExtensionRepositoryReferenceList) DeepCopy() *ExtensionRepositoryReferenceList {
	if in == nil {
		return nil
	}
	out := new(ExtensionRepositoryReferenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionSpec) DeepCopyInto(out *ExtensionSpec) {
	*out = *in
	if in.When != nil {
		in, out := &in.When, &out.When
		*out = make([]ExtensionWhen, len(*in))
		copy(*out, *in)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ExtensionParameter, len(*in))
		copy(*out, *in)
	}
	if in.Children != nil {
		in, out := &in.Children, &out.Children
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionSpec.
func (in *ExtensionSpec) DeepCopy() *ExtensionSpec {
	if in == nil {
		return nil
	}
	out := new(ExtensionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPlugin) DeepCopyInto(out *ExternalPlugin) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPlugin.
func (in *ExternalPlugin) DeepCopy() *ExternalPlugin {
	if in == nil {
		return nil
	}
	out := new(ExternalPlugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Fact) DeepCopyInto(out *Fact) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Fact.
func (in *Fact) DeepCopy() *Fact {
	if in == nil {
		return nil
	}
	out := new(Fact)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Fact) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactList) DeepCopyInto(out *FactList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Fact, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactList.
func (in *FactList) DeepCopy() *FactList {
	if in == nil {
		return nil
	}
	out := new(FactList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactSpec) DeepCopyInto(out *FactSpec) {
	*out = *in
	if in.Measurements != nil {
		in, out := &in.Measurements, &out.Measurements
		*out = make([]Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Statements != nil {
		in, out := &in.Statements, &out.Statements
		*out = make([]Statement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Original.DeepCopyInto(&out.Original)
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.SubjectReference = in.SubjectReference
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactSpec.
func (in *FactSpec) DeepCopy() *FactSpec {
	if in == nil {
		return nil
	}
	out := new(FactSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactStatus) DeepCopyInto(out *FactStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactStatus.
func (in *FactStatus) DeepCopy() *FactStatus {
	if in == nil {
		return nil
	}
	out := new(FactStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitService) DeepCopyInto(out *GitService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitService.
func (in *GitService) DeepCopy() *GitService {
	if in == nil {
		return nil
	}
	out := new(GitService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitServiceList) DeepCopyInto(out *GitServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitServiceList.
func (in *GitServiceList) DeepCopy() *GitServiceList {
	if in == nil {
		return nil
	}
	out := new(GitServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitServiceSpec) DeepCopyInto(out *GitServiceSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitServiceSpec.
func (in *GitServiceSpec) DeepCopy() *GitServiceSpec {
	if in == nil {
		return nil
	}
	out := new(GitServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitStatus) DeepCopyInto(out *GitStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitStatus.
func (in *GitStatus) DeepCopy() *GitStatus {
	if in == nil {
		return nil
	}
	out := new(GitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalProtectionPolicy) DeepCopyInto(out *GlobalProtectionPolicy) {
	*out = *in
	if in.ProtectionPolicy != nil {
		in, out := &in.ProtectionPolicy, &out.ProtectionPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(ProtectionPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.ProtectTested != nil {
		in, out := &in.ProtectTested, &out.ProtectTested
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalProtectionPolicy.
func (in *GlobalProtectionPolicy) DeepCopy() *GlobalProtectionPolicy {
	if in == nil {
		return nil
	}
	out := new(GlobalProtectionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabel) DeepCopyInto(out *IssueLabel) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabel.
func (in *IssueLabel) DeepCopy() *IssueLabel {
	if in == nil {
		return nil
	}
	out := new(IssueLabel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueSummary) DeepCopyInto(out *IssueSummary) {
	*out = *in
	if in.User != nil {
		in, out := &in.User, &out.User
		if *in == nil {
			*out = nil
		} else {
			*out = new(UserDetails)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Assignees != nil {
		in, out := &in.Assignees, &out.Assignees
		*out = make([]UserDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClosedBy != nil {
		in, out := &in.ClosedBy, &out.ClosedBy
		if *in == nil {
			*out = nil
		} else {
			*out = new(UserDetails)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]IssueLabel, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueSummary.
func (in *IssueSummary) DeepCopy() *IssueSummary {
	if in == nil {
		return nil
	}
	out := new(IssueSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobBase) DeepCopyInto(out *JobBase) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableMapOfStringString)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.PodSpec)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobBase.
func (in *JobBase) DeepCopy() *JobBase {
	if in == nil {
		return nil
	}
	out := new(JobBase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lgtm) DeepCopyInto(out *Lgtm) {
	*out = *in
	if in.ReviewActsAsLgtm != nil {
		in, out := &in.ReviewActsAsLgtm, &out.ReviewActsAsLgtm
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.StoreTreeHash != nil {
		in, out := &in.StoreTreeHash, &out.StoreTreeHash
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.StickyLgtmTeam != nil {
		in, out := &in.StickyLgtmTeam, &out.StickyLgtmTeam
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lgtm.
func (in *Lgtm) DeepCopy() *Lgtm {
	if in == nil {
		return nil
	}
	out := new(Lgtm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Measurement) DeepCopyInto(out *Measurement) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Measurement.
func (in *Measurement) DeepCopy() *Measurement {
	if in == nil {
		return nil
	}
	out := new(Measurement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Merger) DeepCopyInto(out *Merger) {
	*out = *in
	if in.SyncPeriod != nil {
		in, out := &in.SyncPeriod, &out.SyncPeriod
		if *in == nil {
			*out = nil
		} else {
			*out = new(time.Duration)
			**out = **in
		}
	}
	if in.StatusUpdatePeriod != nil {
		in, out := &in.StatusUpdatePeriod, &out.StatusUpdatePeriod
		if *in == nil {
			*out = nil
		} else {
			*out = new(time.Duration)
			**out = **in
		}
	}
	if in.TargetURL != nil {
		in, out := &in.TargetURL, &out.TargetURL
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.PRStatusBaseURL != nil {
		in, out := &in.PRStatusBaseURL, &out.PRStatusBaseURL
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.BlockerLabel != nil {
		in, out := &in.BlockerLabel, &out.BlockerLabel
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.SquashLabel != nil {
		in, out := &in.SquashLabel, &out.SquashLabel
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.MaxGoroutines != nil {
		in, out := &in.MaxGoroutines, &out.MaxGoroutines
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	if in.MergeType != nil {
		in, out := &in.MergeType, &out.MergeType
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.ContextPolicy != nil {
		in, out := &in.ContextPolicy, &out.ContextPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(ContextPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Merger.
func (in *Merger) DeepCopy() *Merger {
	if in == nil {
		return nil
	}
	out := new(Merger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Original) DeepCopyInto(out *Original) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Original.
func (in *Original) DeepCopy() *Original {
	if in == nil {
		return nil
	}
	out := new(Original)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Periodic) DeepCopyInto(out *Periodic) {
	*out = *in
	if in.JobBase != nil {
		in, out := &in.JobBase, &out.JobBase
		if *in == nil {
			*out = nil
		} else {
			*out = new(JobBase)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Periodic.
func (in *Periodic) DeepCopy() *Periodic {
	if in == nil {
		return nil
	}
	out := new(Periodic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Periodics) DeepCopyInto(out *Periodics) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]*Periodic, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(Periodic)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Periodics.
func (in *Periodics) DeepCopy() *Periodics {
	if in == nil {
		return nil
	}
	out := new(Periodics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineActivity) DeepCopyInto(out *PipelineActivity) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineActivity.
func (in *PipelineActivity) DeepCopy() *PipelineActivity {
	if in == nil {
		return nil
	}
	out := new(PipelineActivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineActivity) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineActivityList) DeepCopyInto(out *PipelineActivityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PipelineActivity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineActivityList.
func (in *PipelineActivityList) DeepCopy() *PipelineActivityList {
	if in == nil {
		return nil
	}
	out := new(PipelineActivityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineActivityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineActivitySpec) DeepCopyInto(out *PipelineActivitySpec) {
	*out = *in
	if in.StartedTimestamp != nil {
		in, out := &in.StartedTimestamp, &out.StartedTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.CompletedTimestamp != nil {
		in, out := &in.CompletedTimestamp, &out.CompletedTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]PipelineActivityStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostExtensions != nil {
		in, out := &in.PostExtensions, &out.PostExtensions
		*out = make([]ExtensionExecution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]Attachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.BatchPipelineActivity.DeepCopyInto(&out.BatchPipelineActivity)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineActivitySpec.
func (in *PipelineActivitySpec) DeepCopy() *PipelineActivitySpec {
	if in == nil {
		return nil
	}
	out := new(PipelineActivitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineActivityStatus) DeepCopyInto(out *PipelineActivityStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineActivityStatus.
func (in *PipelineActivityStatus) DeepCopy() *PipelineActivityStatus {
	if in == nil {
		return nil
	}
	out := new(PipelineActivityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineActivityStep) DeepCopyInto(out *PipelineActivityStep) {
	*out = *in
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		if *in == nil {
			*out = nil
		} else {
			*out = new(StageActivityStep)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Promote != nil {
		in, out := &in.Promote, &out.Promote
		if *in == nil {
			*out = nil
		} else {
			*out = new(PromoteActivityStep)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Preview != nil {
		in, out := &in.Preview, &out.Preview
		if *in == nil {
			*out = nil
		} else {
			*out = new(PreviewActivityStep)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineActivityStep.
func (in *PipelineActivityStep) DeepCopy() *PipelineActivityStep {
	if in == nil {
		return nil
	}
	out := new(PipelineActivityStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineExtension) DeepCopyInto(out *PipelineExtension) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineExtension.
func (in *PipelineExtension) DeepCopy() *PipelineExtension {
	if in == nil {
		return nil
	}
	out := new(PipelineExtension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStageAndChildren) DeepCopyInto(out *PipelineStageAndChildren) {
	*out = *in
	in.Stage.DeepCopyInto(&out.Stage)
	if in.Parallel != nil {
		in, out := &in.Parallel, &out.Parallel
		*out = make([]PipelineStageAndChildren, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]PipelineStageAndChildren, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStageAndChildren.
func (in *PipelineStageAndChildren) DeepCopy() *PipelineStageAndChildren {
	if in == nil {
		return nil
	}
	out := new(PipelineStageAndChildren)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStructure) DeepCopyInto(out *PipelineStructure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.PipelineRef != nil {
		in, out := &in.PipelineRef, &out.PipelineRef
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.PipelineRunRef != nil {
		in, out := &in.PipelineRunRef, &out.PipelineRunRef
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]PipelineStructureStage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStructure.
func (in *PipelineStructure) DeepCopy() *PipelineStructure {
	if in == nil {
		return nil
	}
	out := new(PipelineStructure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineStructure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStructureList) DeepCopyInto(out *PipelineStructureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PipelineStructure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStructureList.
func (in *PipelineStructureList) DeepCopy() *PipelineStructureList {
	if in == nil {
		return nil
	}
	out := new(PipelineStructureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineStructureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStructureStage) DeepCopyInto(out *PipelineStructureStage) {
	*out = *in
	if in.TaskRef != nil {
		in, out := &in.TaskRef, &out.TaskRef
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.TaskRunRef != nil {
		in, out := &in.TaskRunRef, &out.TaskRunRef
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Parallel != nil {
		in, out := &in.Parallel, &out.Parallel
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Previous != nil {
		in, out := &in.Previous, &out.Previous
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Next != nil {
		in, out := &in.Next, &out.Next
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStructureStage.
func (in *PipelineStructureStage) DeepCopy() *PipelineStructureStage {
	if in == nil {
		return nil
	}
	out := new(PipelineStructureStage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Plugin) DeepCopyInto(out *Plugin) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Plugin.
func (in *Plugin) DeepCopy() *Plugin {
	if in == nil {
		return nil
	}
	out := new(Plugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Plugin) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginList) DeepCopyInto(out *PluginList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Plugin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginList.
func (in *PluginList) DeepCopy() *PluginList {
	if in == nil {
		return nil
	}
	out := new(PluginList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluginList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginSpec) DeepCopyInto(out *PluginSpec) {
	*out = *in
	if in.Binaries != nil {
		in, out := &in.Binaries, &out.Binaries
		*out = make([]Binary, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginSpec.
func (in *PluginSpec) DeepCopy() *PluginSpec {
	if in == nil {
		return nil
	}
	out := new(PluginSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Postsubmit) DeepCopyInto(out *Postsubmit) {
	*out = *in
	if in.JobBase != nil {
		in, out := &in.JobBase, &out.JobBase
		if *in == nil {
			*out = nil
		} else {
			*out = new(JobBase)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.RegexpChangeMatcher != nil {
		in, out := &in.RegexpChangeMatcher, &out.RegexpChangeMatcher
		if *in == nil {
			*out = nil
		} else {
			*out = new(RegexpChangeMatcher)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Brancher != nil {
		in, out := &in.Brancher, &out.Brancher
		if *in == nil {
			*out = nil
		} else {
			*out = new(Brancher)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Postsubmit.
func (in *Postsubmit) DeepCopy() *Postsubmit {
	if in == nil {
		return nil
	}
	out := new(Postsubmit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Postsubmits) DeepCopyInto(out *Postsubmits) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]*Postsubmit, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(Postsubmit)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Postsubmits.
func (in *Postsubmits) DeepCopy() *Postsubmits {
	if in == nil {
		return nil
	}
	out := new(Postsubmits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Presubmit) DeepCopyInto(out *Presubmit) {
	*out = *in
	if in.JobBase != nil {
		in, out := &in.JobBase, &out.JobBase
		if *in == nil {
			*out = nil
		} else {
			*out = new(JobBase)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Brancher != nil {
		in, out := &in.Brancher, &out.Brancher
		if *in == nil {
			*out = nil
		} else {
			*out = new(Brancher)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.RegexpChangeMatcher != nil {
		in, out := &in.RegexpChangeMatcher, &out.RegexpChangeMatcher
		if *in == nil {
			*out = nil
		} else {
			*out = new(RegexpChangeMatcher)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.AlwaysRun != nil {
		in, out := &in.AlwaysRun, &out.AlwaysRun
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Optional != nil {
		in, out := &in.Optional, &out.Optional
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Report != nil {
		in, out := &in.Report, &out.Report
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.RerunCommand != nil {
		in, out := &in.RerunCommand, &out.RerunCommand
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.MergeType != nil {
		in, out := &in.MergeType, &out.MergeType
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]*Query, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(Query)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		if *in == nil {
			*out = nil
		} else {
			*out = new(ProtectionPolicies)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.ContextPolicy != nil {
		in, out := &in.ContextPolicy, &out.ContextPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(RepoContextPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Presubmit.
func (in *Presubmit) DeepCopy() *Presubmit {
	if in == nil {
		return nil
	}
	out := new(Presubmit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Presubmits) DeepCopyInto(out *Presubmits) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]*Presubmit, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(Presubmit)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Presubmits.
func (in *Presubmits) DeepCopy() *Presubmits {
	if in == nil {
		return nil
	}
	out := new(Presubmits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreviewActivityStep) DeepCopyInto(out *PreviewActivityStep) {
	*out = *in
	in.CoreActivityStep.DeepCopyInto(&out.CoreActivityStep)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreviewActivityStep.
func (in *PreviewActivityStep) DeepCopy() *PreviewActivityStep {
	if in == nil {
		return nil
	}
	out := new(PreviewActivityStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreviewGitSpec) DeepCopyInto(out *PreviewGitSpec) {
	*out = *in
	out.User = in.User
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreviewGitSpec.
func (in *PreviewGitSpec) DeepCopy() *PreviewGitSpec {
	if in == nil {
		return nil
	}
	out := new(PreviewGitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromoteActivityStep) DeepCopyInto(out *PromoteActivityStep) {
	*out = *in
	in.CoreActivityStep.DeepCopyInto(&out.CoreActivityStep)
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		if *in == nil {
			*out = nil
		} else {
			*out = new(PromotePullRequestStep)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		if *in == nil {
			*out = nil
		} else {
			*out = new(PromoteUpdateStep)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromoteActivityStep.
func (in *PromoteActivityStep) DeepCopy() *PromoteActivityStep {
	if in == nil {
		return nil
	}
	out := new(PromoteActivityStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromotePullRequestStep) DeepCopyInto(out *PromotePullRequestStep) {
	*out = *in
	in.CoreActivityStep.DeepCopyInto(&out.CoreActivityStep)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromotePullRequestStep.
func (in *PromotePullRequestStep) DeepCopy() *PromotePullRequestStep {
	if in == nil {
		return nil
	}
	out := new(PromotePullRequestStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromoteUpdateStep) DeepCopyInto(out *PromoteUpdateStep) {
	*out = *in
	in.CoreActivityStep.DeepCopyInto(&out.CoreActivityStep)
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]GitStatus, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromoteUpdateStep.
func (in *PromoteUpdateStep) DeepCopy() *PromoteUpdateStep {
	if in == nil {
		return nil
	}
	out := new(PromoteUpdateStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromoteWorkflowStep) DeepCopyInto(out *PromoteWorkflowStep) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromoteWorkflowStep.
func (in *PromoteWorkflowStep) DeepCopy() *PromoteWorkflowStep {
	if in == nil {
		return nil
	}
	out := new(PromoteWorkflowStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionPolicies) DeepCopyInto(out *ProtectionPolicies) {
	*out = *in
	if in.ProtectionPolicy != nil {
		in, out := &in.ProtectionPolicy, &out.ProtectionPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(ProtectionPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make(map[string]*ProtectionPolicy, len(*in))
		for key, val := range *in {
			if val == nil {
				(*out)[key] = nil
			} else {
				(*out)[key] = new(ProtectionPolicy)
				val.DeepCopyInto((*out)[key])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionPolicies.
func (in *ProtectionPolicies) DeepCopy() *ProtectionPolicies {
	if in == nil {
		return nil
	}
	out := new(ProtectionPolicies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionPolicy) DeepCopyInto(out *ProtectionPolicy) {
	*out = *in
	if in.Protect != nil {
		in, out := &in.Protect, &out.Protect
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		if *in == nil {
			*out = nil
		} else {
			*out = new(BranchProtectionContextPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Admins != nil {
		in, out := &in.Admins, &out.Admins
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Restrictions != nil {
		in, out := &in.Restrictions, &out.Restrictions
		if *in == nil {
			*out = nil
		} else {
			*out = new(Restrictions)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReviewPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionPolicy.
func (in *ProtectionPolicy) DeepCopy() *ProtectionPolicy {
	if in == nil {
		return nil
	}
	out := new(ProtectionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestInfo) DeepCopyInto(out *PullRequestInfo) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestInfo.
func (in *PullRequestInfo) DeepCopy() *PullRequestInfo {
	if in == nil {
		return nil
	}
	out := new(PullRequestInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Query) DeepCopyInto(out *Query) {
	*out = *in
	if in.ExcludedBranches != nil {
		in, out := &in.ExcludedBranches, &out.ExcludedBranches
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.IncludedBranches != nil {
		in, out := &in.IncludedBranches, &out.IncludedBranches
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.MissingLabels != nil {
		in, out := &in.MissingLabels, &out.MissingLabels
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Milestone != nil {
		in, out := &in.Milestone, &out.Milestone
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.ReviewApprovedRequired != nil {
		in, out := &in.ReviewApprovedRequired, &out.ReviewApprovedRequired
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Query.
func (in *Query) DeepCopy() *Query {
	if in == nil {
		return nil
	}
	out := new(Query)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuickStartLocation) DeepCopyInto(out *QuickStartLocation) {
	*out = *in
	if in.Includes != nil {
		in, out := &in.Includes, &out.Includes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuickStartLocation.
func (in *QuickStartLocation) DeepCopy() *QuickStartLocation {
	if in == nil {
		return nil
	}
	out := new(QuickStartLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexpChangeMatcher) DeepCopyInto(out *RegexpChangeMatcher) {
	*out = *in
	if in.RunIfChanged != nil {
		in, out := &in.RunIfChanged, &out.RunIfChanged
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexpChangeMatcher.
func (in *RegexpChangeMatcher) DeepCopy() *RegexpChangeMatcher {
	if in == nil {
		return nil
	}
	out := new(RegexpChangeMatcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Release) DeepCopyInto(out *Release) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Release.
func (in *Release) DeepCopy() *Release {
	if in == nil {
		return nil
	}
	out := new(Release)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Release) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseList) DeepCopyInto(out *ReleaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Release, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseList.
func (in *ReleaseList) DeepCopy() *ReleaseList {
	if in == nil {
		return nil
	}
	out := new(ReleaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReleaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseSpec) DeepCopyInto(out *ReleaseSpec) {
	*out = *in
	if in.Commits != nil {
		in, out := &in.Commits, &out.Commits
		*out = make([]CommitSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issues != nil {
		in, out := &in.Issues, &out.Issues
		*out = make([]IssueSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PullRequests != nil {
		in, out := &in.PullRequests, &out.PullRequests
		*out = make([]IssueSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DependencyUpdates != nil {
		in, out := &in.DependencyUpdates, &out.DependencyUpdates
		*out = make([]DependencyUpdate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseSpec.
func (in *ReleaseSpec) DeepCopy() *ReleaseSpec {
	if in == nil {
		return nil
	}
	out := new(ReleaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseStatus) DeepCopyInto(out *ReleaseStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseStatus.
func (in *ReleaseStatus) DeepCopy() *ReleaseStatus {
	if in == nil {
		return nil
	}
	out := new(ReleaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplaceableMapOfStringContextPolicy) DeepCopyInto(out *ReplaceableMapOfStringContextPolicy) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make(map[string]*ContextPolicy, len(*in))
		for key, val := range *in {
			if val == nil {
				(*out)[key] = nil
			} else {
				(*out)[key] = new(ContextPolicy)
				val.DeepCopyInto((*out)[key])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplaceableMapOfStringContextPolicy.
func (in *ReplaceableMapOfStringContextPolicy) DeepCopy() *ReplaceableMapOfStringContextPolicy {
	if in == nil {
		return nil
	}
	out := new(ReplaceableMapOfStringContextPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplaceableMapOfStringString) DeepCopyInto(out *ReplaceableMapOfStringString) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplaceableMapOfStringString.
func (in *ReplaceableMapOfStringString) DeepCopy() *ReplaceableMapOfStringString {
	if in == nil {
		return nil
	}
	out := new(ReplaceableMapOfStringString)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplaceableSliceOfExternalPlugins) DeepCopyInto(out *ReplaceableSliceOfExternalPlugins) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]*ExternalPlugin, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(ExternalPlugin)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplaceableSliceOfExternalPlugins.
func (in *ReplaceableSliceOfExternalPlugins) DeepCopy() *ReplaceableSliceOfExternalPlugins {
	if in == nil {
		return nil
	}
	out := new(ReplaceableSliceOfExternalPlugins)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplaceableSliceOfStrings) DeepCopyInto(out *ReplaceableSliceOfStrings) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplaceableSliceOfStrings.
func (in *ReplaceableSliceOfStrings) DeepCopy() *ReplaceableSliceOfStrings {
	if in == nil {
		return nil
	}
	out := new(ReplaceableSliceOfStrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoContextPolicy) DeepCopyInto(out *RepoContextPolicy) {
	*out = *in
	if in.ContextPolicy != nil {
		in, out := &in.ContextPolicy, &out.ContextPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(ContextPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Branches != nil {
		in, out := &in.Branches, &out.Branches
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableMapOfStringContextPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoContextPolicy.
func (in *RepoContextPolicy) DeepCopy() *RepoContextPolicy {
	if in == nil {
		return nil
	}
	out := new(RepoContextPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceReference) DeepCopyInto(out *ResourceReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceReference.
func (in *ResourceReference) DeepCopy() *ResourceReference {
	if in == nil {
		return nil
	}
	out := new(ResourceReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Restrictions) DeepCopyInto(out *Restrictions) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Restrictions.
func (in *Restrictions) DeepCopy() *Restrictions {
	if in == nil {
		return nil
	}
	out := new(Restrictions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReviewPolicy) DeepCopyInto(out *ReviewPolicy) {
	*out = *in
	if in.DismissalRestrictions != nil {
		in, out := &in.DismissalRestrictions, &out.DismissalRestrictions
		if *in == nil {
			*out = nil
		} else {
			*out = new(Restrictions)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.DismissStale != nil {
		in, out := &in.DismissStale, &out.DismissStale
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.RequireOwners != nil {
		in, out := &in.RequireOwners, &out.RequireOwners
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.Approvals != nil {
		in, out := &in.Approvals, &out.Approvals
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReviewPolicy.
func (in *ReviewPolicy) DeepCopy() *ReviewPolicy {
	if in == nil {
		return nil
	}
	out := new(ReviewPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scheduler) DeepCopyInto(out *Scheduler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scheduler.
func (in *Scheduler) DeepCopy() *Scheduler {
	if in == nil {
		return nil
	}
	out := new(Scheduler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Scheduler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerAgent) DeepCopyInto(out *SchedulerAgent) {
	*out = *in
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerAgent.
func (in *SchedulerAgent) DeepCopy() *SchedulerAgent {
	if in == nil {
		return nil
	}
	out := new(SchedulerAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerList) DeepCopyInto(out *SchedulerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Scheduler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerList.
func (in *SchedulerList) DeepCopy() *SchedulerList {
	if in == nil {
		return nil
	}
	out := new(SchedulerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SchedulerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerSpec) DeepCopyInto(out *SchedulerSpec) {
	*out = *in
	if in.ScehdulerAgent != nil {
		in, out := &in.ScehdulerAgent, &out.ScehdulerAgent
		if *in == nil {
			*out = nil
		} else {
			*out = new(SchedulerAgent)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		if *in == nil {
			*out = nil
		} else {
			*out = new(GlobalProtectionPolicy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Presubmits != nil {
		in, out := &in.Presubmits, &out.Presubmits
		if *in == nil {
			*out = nil
		} else {
			*out = new(Presubmits)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Postsubmits != nil {
		in, out := &in.Postsubmits, &out.Postsubmits
		if *in == nil {
			*out = nil
		} else {
			*out = new(Postsubmits)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		if *in == nil {
			*out = nil
		} else {
			*out = new(Trigger)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Approve != nil {
		in, out := &in.Approve, &out.Approve
		if *in == nil {
			*out = nil
		} else {
			*out = new(Approve)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.LGTM != nil {
		in, out := &in.LGTM, &out.LGTM
		if *in == nil {
			*out = nil
		} else {
			*out = new(Lgtm)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.ExternalPlugins != nil {
		in, out := &in.ExternalPlugins, &out.ExternalPlugins
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfExternalPlugins)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Merger != nil {
		in, out := &in.Merger, &out.Merger
		if *in == nil {
			*out = nil
		} else {
			*out = new(Merger)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Plugins != nil {
		in, out := &in.Plugins, &out.Plugins
		if *in == nil {
			*out = nil
		} else {
			*out = new(ReplaceableSliceOfStrings)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.ConfigUpdater != nil {
		in, out := &in.ConfigUpdater, &out.ConfigUpdater
		if *in == nil {
			*out = nil
		} else {
			*out = new(ConfigUpdater)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Welcome != nil {
		in, out := &in.Welcome, &out.Welcome
		*out = make([]*Welcome, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(Welcome)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	if in.Periodics != nil {
		in, out := &in.Periodics, &out.Periodics
		if *in == nil {
			*out = nil
		} else {
			*out = new(Periodics)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(Attachment)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerSpec.
func (in *SchedulerSpec) DeepCopy() *SchedulerSpec {
	if in == nil {
		return nil
	}
	out := new(SchedulerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepository) DeepCopyInto(out *SourceRepository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepository.
func (in *SourceRepository) DeepCopy() *SourceRepository {
	if in == nil {
		return nil
	}
	out := new(SourceRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceRepository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepositoryGroup) DeepCopyInto(out *SourceRepositoryGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepositoryGroup.
func (in *SourceRepositoryGroup) DeepCopy() *SourceRepositoryGroup {
	if in == nil {
		return nil
	}
	out := new(SourceRepositoryGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceRepositoryGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepositoryGroupList) DeepCopyInto(out *SourceRepositoryGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceRepositoryGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepositoryGroupList.
func (in *SourceRepositoryGroupList) DeepCopy() *SourceRepositoryGroupList {
	if in == nil {
		return nil
	}
	out := new(SourceRepositoryGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceRepositoryGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepositoryGroupSpec) DeepCopyInto(out *SourceRepositoryGroupSpec) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.SourceRepositorySpec != nil {
		in, out := &in.SourceRepositorySpec, &out.SourceRepositorySpec
		*out = make([]ResourceReference, len(*in))
		copy(*out, *in)
	}
	out.Scheduler = in.Scheduler
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepositoryGroupSpec.
func (in *SourceRepositoryGroupSpec) DeepCopy() *SourceRepositoryGroupSpec {
	if in == nil {
		return nil
	}
	out := new(SourceRepositoryGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepositoryList) DeepCopyInto(out *SourceRepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceRepository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepositoryList.
func (in *SourceRepositoryList) DeepCopy() *SourceRepositoryList {
	if in == nil {
		return nil
	}
	out := new(SourceRepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceRepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRepositorySpec) DeepCopyInto(out *SourceRepositorySpec) {
	*out = *in
	out.Scheduler = in.Scheduler
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRepositorySpec.
func (in *SourceRepositorySpec) DeepCopy() *SourceRepositorySpec {
	if in == nil {
		return nil
	}
	out := new(SourceRepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageActivityStep) DeepCopyInto(out *StageActivityStep) {
	*out = *in
	in.CoreActivityStep.DeepCopyInto(&out.CoreActivityStep)
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]CoreActivityStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageActivityStep.
func (in *StageActivityStep) DeepCopy() *StageActivityStep {
	if in == nil {
		return nil
	}
	out := new(StageActivityStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Statement) DeepCopyInto(out *Statement) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Statement.
func (in *Statement) DeepCopy() *Statement {
	if in == nil {
		return nil
	}
	out := new(Statement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageLocation) DeepCopyInto(out *StorageLocation) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageLocation.
func (in *StorageLocation) DeepCopy() *StorageLocation {
	if in == nil {
		return nil
	}
	out := new(StorageLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Team) DeepCopyInto(out *Team) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Team.
func (in *Team) DeepCopy() *Team {
	if in == nil {
		return nil
	}
	out := new(Team)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Team) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamList) DeepCopyInto(out *TeamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Team, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamList.
func (in *TeamList) DeepCopy() *TeamList {
	if in == nil {
		return nil
	}
	out := new(TeamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TeamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSettings) DeepCopyInto(out *TeamSettings) {
	*out = *in
	if in.QuickstartLocations != nil {
		in, out := &in.QuickstartLocations, &out.QuickstartLocations
		*out = make([]QuickStartLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostPreviewJobs != nil {
		in, out := &in.PostPreviewJobs, &out.PostPreviewJobs
		*out = make([]batch_v1.Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageLocations != nil {
		in, out := &in.StorageLocations, &out.StorageLocations
		*out = make([]StorageLocation, len(*in))
		copy(*out, *in)
	}
	if in.AppsPrefixes != nil {
		in, out := &in.AppsPrefixes, &out.AppsPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.DefaultScheduler = in.DefaultScheduler
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSettings.
func (in *TeamSettings) DeepCopy() *TeamSettings {
	if in == nil {
		return nil
	}
	out := new(TeamSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSpec) DeepCopyInto(out *TeamSpec) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSpec.
func (in *TeamSpec) DeepCopy() *TeamSpec {
	if in == nil {
		return nil
	}
	out := new(TeamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamStatus) DeepCopyInto(out *TeamStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamStatus.
func (in *TeamStatus) DeepCopy() *TeamStatus {
	if in == nil {
		return nil
	}
	out := new(TeamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trigger) DeepCopyInto(out *Trigger) {
	*out = *in
	if in.TrustedOrg != nil {
		in, out := &in.TrustedOrg, &out.TrustedOrg
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.JoinOrgURL != nil {
		in, out := &in.JoinOrgURL, &out.JoinOrgURL
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.OnlyOrgMembers != nil {
		in, out := &in.OnlyOrgMembers, &out.OnlyOrgMembers
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	if in.IgnoreOkToTest != nil {
		in, out := &in.IgnoreOkToTest, &out.IgnoreOkToTest
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trigger.
func (in *Trigger) DeepCopy() *Trigger {
	if in == nil {
		return nil
	}
	out := new(Trigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.User.DeepCopyInto(&out.User)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDetails) DeepCopyInto(out *UserDetails) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = (*in).DeepCopy()
		}
	}
	if in.Accounts != nil {
		in, out := &in.Accounts, &out.Accounts
		*out = make([]AccountReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDetails.
func (in *UserDetails) DeepCopy() *UserDetails {
	if in == nil {
		return nil
	}
	out := new(UserDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Welcome) DeepCopyInto(out *Welcome) {
	*out = *in
	if in.MessageTemplate != nil {
		in, out := &in.MessageTemplate, &out.MessageTemplate
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Welcome.
func (in *Welcome) DeepCopy() *Welcome {
	if in == nil {
		return nil
	}
	out := new(Welcome)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workflow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowList) DeepCopyInto(out *WorkflowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowList.
func (in *WorkflowList) DeepCopy() *WorkflowList {
	if in == nil {
		return nil
	}
	out := new(WorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowPreconditions) DeepCopyInto(out *WorkflowPreconditions) {
	*out = *in
	if in.Environments != nil {
		in, out := &in.Environments, &out.Environments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowPreconditions.
func (in *WorkflowPreconditions) DeepCopy() *WorkflowPreconditions {
	if in == nil {
		return nil
	}
	out := new(WorkflowPreconditions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpec) DeepCopyInto(out *WorkflowSpec) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]WorkflowStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpec.
func (in *WorkflowSpec) DeepCopy() *WorkflowSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowStatus) DeepCopyInto(out *WorkflowStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowStatus.
func (in *WorkflowStatus) DeepCopy() *WorkflowStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowStep) DeepCopyInto(out *WorkflowStep) {
	*out = *in
	in.Preconditions.DeepCopyInto(&out.Preconditions)
	if in.Promote != nil {
		in, out := &in.Promote, &out.Promote
		if *in == nil {
			*out = nil
		} else {
			*out = new(PromoteWorkflowStep)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowStep.
func (in *WorkflowStep) DeepCopy() *WorkflowStep {
	if in == nil {
		return nil
	}
	out := new(WorkflowStep)
	in.DeepCopyInto(out)
	return out
}
